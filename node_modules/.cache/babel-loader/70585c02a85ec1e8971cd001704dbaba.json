{"ast":null,"code":"var _jsxFileName = \"/Users/nickchen/Desktop/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\nimport './App.css'; // import {robots} from './robots';\n\nimport { setSearchField } from '../action';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  // as a method inside class, no const \n  render() {\n    const _this$state = this.state,\n          robots = _this$state.robots,\n          searchfield = _this$state.searchfield;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    }); // if there are no robots, we are Loading\n\n    if (!robots.length) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Loading\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"RobotFriends\"), React.createElement(SearchBox, {\n        searchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        robots: filteredRobots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    }\n  }\n\n} //subscribe to any state changes in the store\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/nickchen/Desktop/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","Scroll","SearchBox","setSearchField","mapStateToProps","state","searchField","searchRobots","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","setState","searchfield","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP,C,CACA;;AAEA,SAAQC,cAAR,QAA6B,WAA7B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD;AAD3B,GAAP;AAGA,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACN,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD9B,GAAP;AAGA,CAJD;;AAKA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AAEzBiB,EAAAA,WAAW,GAAE;AACd;;AADc,SAebL,cAfa,GAeIC,KAAD,IAAU;AAE5B,WAAKK,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEN,KAAK,CAACC,MAAN,CAAaC;AAA3B,OAAd;AAGA,KApBe;;AAEd,SAAKR,KAAL,GAAa;AACba,MAAAA,MAAM,EAAE,EADK;AAEbD,MAAAA,WAAW,EAAE;AAFA,KAAb;AAIE;;AAEDE,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOG,KAAK,IAAI,KAAKR,QAAL,CAAc;AAACE,MAAAA,MAAM,EAAGM;AAAV,KAAd,CAFhB;AAIA;;AAQD;AAEHC,EAAAA,MAAM,GAAG;AAAA,wBACiC,KAAKpB,KADtC;AAAA,UACUa,MADV,eACUA,MADV;AAAA,UACkBD,WADlB,eACkBA,WADlB;AAEN,UAAMS,cAAc,GAAGR,MAAM,CAACS,MAAP,CAAcC,KAAK,IAAG;AAC3C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCd,WAAW,CAACa,WAAZ,EAAlC,CAAP;AACD,KAFsB,CAAvB,CAFM,CAKN;;AACI,QAAI,CAACZ,MAAM,CAACc,MAAZ,EAAoB;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,KAFD,MAEO;AACX,aACC;AAAK,QAAA,SAAS,EAAG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,EAEG,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAI,KAAKtB,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,EAGG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAIgB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAHH,CADD;AAUU;AACP;;AA7CsB,C,CAiD5B;;;AACA,eAAe3B,OAAO,CAACK,eAAD,EAAiBI,kBAAjB,CAAP,CAA4CM,GAA5C,CAAf","sourcesContent":["import React , {Component} from 'react';\nimport {connect} from 'react-redux';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\n// import {robots} from './robots';\n\nimport {setSearchField} from '../action'\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t  searchField: state.searchRobots.searchField\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t  onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n    }\n}\nclass App extends Component {    \n   \n   constructor(){\n\t super()\n\t this.state = {\n\t\trobots: [],\n\t\tsearchfield: ''\n\t }\n   }\n\n   componentDidMount() {\n   \tfetch('https://jsonplaceholder.typicode.com/users')\n\t   \t.then(response => response.json())\n\t   \t.then(users => this.setState({robots : users}));\n   \n   }\n\n   onSearchChange= (event)=> {\n   \n\tthis.setState({searchfield: event.target.value})  \n\t\n\t\n}\n   // as a method inside class, no const \n\nrender() {\t\n            const {robots, searchfield} = this.state;\t      \n\t\t\tconst filteredRobots = robots.filter(robot =>{\n\t\t\t  return robot.name.toLowerCase().includes(searchfield.toLowerCase()) \n\t\t\t}) \n   // if there are no robots, we are Loading\n       if (!robots.length) {\n       \t return <h1>Loading</h1>      \n       } else {\n\t\t return (\n\t\t\t\t<div className = 'tc'>\n\t\t\t\t\t  <h1 >RobotFriends</h1>\n\t\t\t\t\t  <SearchBox searchChange = {this.onSearchChange}/>  \n\t\t\t\t\t  <Scroll>\n\t\t\t\t\t     <CardList robots = {filteredRobots} />\n\t\t              </Scroll>\n\t\t\t\t</div>\n\t\t\t\t\t);\n\n            }\t\n     }\t\n\n  }\n\n//subscribe to any state changes in the store\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}